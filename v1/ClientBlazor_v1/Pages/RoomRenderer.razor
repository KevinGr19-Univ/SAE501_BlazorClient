@page "/"
@using ClientBlazor_v1.Components
@using ClientBlazor_v1.Interop
@using ClientBlazor_v1.Models

<PageTitle>Room Renderer</PageTitle>

<div id="renderer_container">

    <canvas id="renderer" touch-action="none"></canvas>

    <div class="renderer_ui align-items-start">
        <FWindow CloseButton="false">
            <Header>
                <span>Salle D360</span>
            </Header>
            <Content>
                <FSubWindow>
                    <Header><span>Actions</span></Header>
                    <Content>
                        <button class="button_add" @onclick=ClickAddCapteur>Ajouter un capteur</button>
                    </Content>
                </FSubWindow>
            </Content>
        </FWindow>
    </div>

    <div class="renderer_ui align-items-end">
        @foreach(var capteurInterop in CapteurInterops)
        {
            <CapteurVM CapteurInterop="capteurInterop"></CapteurVM>
        }
    </div>
</div>

@inject IJSRuntime JS
@code{
    public Scene Scene;
    public List<CapteurInterop> CapteurInterops = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var module = await JS.InvokeAsync<IJSObjectReference>("import", "/js/scene.js");
            Scene = new Scene(await module.InvokeAsync<IJSInProcessObjectReference>("getScene"));

            await InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    public async Task ClickAddCapteur()
    {
        CapteurInterops.Add(Scene.AddCapteur(new Capteur()));
    }
}