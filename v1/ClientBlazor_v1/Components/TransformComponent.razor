@using ClientBlazor_v1.Components.Utils
@using System.ComponentModel
@using ClientBlazor_v1.Models.Utils
@using ClientBlazor_v1.ViewModels.Utils

<FSubWindow>
    <Header><span>Transform</span></Header>
    <Content>
        @if(TransformVM is IPosition positionable)
        {
            <div>
                <b>Position</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosZ>
                    </span>
                </div>
            </div>
        }
        @if(TransformVM is IRotation rotationable)
        {
            <div>
                <b>Rotation</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotZ>
                    </span>
                </div>
            </div>
        }
        else if(TransformVM is IRotationY rotationableY)
        {
            <div>
                <b>Rotation</b>
                <div class="sgap-row">
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationableY.RotY>
                    </span>
                </div>
            </div>
        }
        @if (TransformVM is IScale scalable)
        {
            <div>
                <b>Échelle</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=scalable.ScaleX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=scalable.ScaleY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=scalable.ScaleZ>
                    </span>
                </div>
            </div>
        }
    </Content>
</FSubWindow>

@inherits NotifiedComponent
@code {
    [Parameter]
    public IJSObjectVM TransformVM { get; set; }

    protected override INotifyPropertyChanged Notifier => TransformVM;
}
