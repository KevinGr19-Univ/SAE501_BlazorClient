@using ClientBlazor_v1.Components.Utils
@using ClientBlazor_v1.Models.Transform
@using ClientBlazor_v1.ViewModels.JS

<FSubWindow>
    <Header><span>Transform</span></Header>
    <Content>
        @if (VM is IPosition positionable)
        {
            <div>
                <b>Position</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=positionable.PosZ>
                    </span>
                </div>
            </div>
        }

        @if (VM is IRotation rotationable)
        {
            <div>
                <b>Rotation</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=rotationable.RotZ>
                    </span>
                </div>
            </div>
        }
        else if (VM is IOrientation orientable)
        {
            <div>
                <b>Rotation</b>
                <div class="sgap-row">
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=orientable.Orientation>
                    </span>
                </div>
            </div>
        }

        @if (VM is ISize sizable)
        {
            <div>
                <b>Taille</b>
                <div class="sgap-row">
                    <span>
                        <label class="xaxis">X:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=sizable.SizeX>
                    </span>
                    <span>
                        <label class="yaxis">Y:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=sizable.SizeY>
                    </span>
                    <span>
                        <label class="zaxis">Z:&nbsp;</label>
                        <input type="number" class="number_box" @bind-value=sizable.SizeZ>
                    </span>
                </div>
            </div>
        }
    </Content>
</FSubWindow>

@inherits UIUpdatableComponent
@code {
    [Parameter]
    public IJSObjectVM VM { get; set; }

    public override IUpdateUI Updatable => VM;
}
